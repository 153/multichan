# multichan modules

 * app.py
 * settings.py
 * daemon.py
 
 * utils.py
 * viewer.py
 * writer.py
 * refresh.py
 * whitelist.py

 * pagemaker.py
 * home.py
 * tags.py
 * atom.py
 * tripcode.py

 * backup.py
 * mod.py

* ips.txt
* log.txt
* delete.txt
* bans.txt


app.py:
	 * Flask entry point
	 * Handle 404 page, static, /api/

settings.py:
	 * Configure a few things. Name, URL, etc
	 * Set "friends" to download posts from
	 * Set how often to scrape remote servers
	 * Decide whether multichan is text or imageboard

daemon.py:
	 * Sync and rebuild databases -- refresh.linksites()
	 * Make sure entries in delete.txt are deleted

utils.py:
	 * A few simple utilities.
	 * Unix time to ISO8601
	 * HTTP get / get over Tor
	 * Image URL to image attachment

viewer.py:
	 * List boards
	 * List boards' threads
	 * List all threads
	 * Display a thread

writer.py:
	 * Create a thread
	 * Reply to a thread
	 * Update the board

refresh.py:
	* rebuilds thread indexes from the bottom up
	* scrapes remote threads/tags
	* grabs new posts in followed threads and new threads

whitelist.py:
	* maintains a list of who's allowed to post and who's banned
	* generates CAPTCHA images

--
pagemaker.py:
	 * wrap page in header and footer with mk()
	 * prepare file like ./html/file.html with html("file")
home.py:
	 * Homepage
	 * Rules page, About page, Friends page
	 * /stats/

tags.py:
	 * load tag lists
	 * build tag lists from head.txt from bottom up
	 * present tag index / tag's threads

atom.py:
	 * make ATOM feeds for site, board, thread, tag, comments
	 * show index of ATOM feeds

tripcode.py:
	 * generate tripcodes and secure tripcodes
	 * command line tripcodes like "python3 tripcode.py3 hello"
	 
--
backup.py:
	* backup config, threads, html, static data to " ./bak/"

mod.py:
	* executed as " python3 mod.py"
	* deletes threads/comments marked for deletion
	* good for mass deletes

--
See also ./_dox/moderation.txt

ips.txt:
	* List of IPs attempting Captcha
	* Lists time an IP was approved to post, if approved
	* Delete an IP to remove posting privileges
	* attempt-time   ip-address   captcha-code   time-approved

log.txt:
        * IP log of new comments/threads on current server
	* board thread reply-number ipaddress

bans.txt:
	* On IP or range (a.b.c.d and a.b.c ) per line;
	* Banned users always fail captcha
	* Banned users should not be present in log.txt

delete.txt:
	* Threads/comments here will be erased or wiped
	* A reason can be given after ";" semicolon


	
