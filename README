1. git clone https://bitbucket.org/796f/multichan
2. pip3 install -r requirements.txt
3. edit settings.py
4. python3 refresh.py # This sets up federation / syncing
5. python3 app.py 

./_dox/NGINX.txt and ./_dox/APACHE.txt have information on configuring a
webserver to use a reverse proxy to assign a domain name and port (like 80
or 443) to the multichan server.

# Basic info
Script runs by default at 127.0.0.1 port 5000. Using nginx or lighttpd,
it's fairly simple to point a domain name and port 80 or 443 at the
server.

Modify settings.py setting "name" to set the name of your board;
add boards you want to link with in the "friends" part of the configuration.
Then, run `python3 refresh.py` to federate / prepare to federate.

The script `backup.py` creates a directory, `./bak/`, which contains
the current site's settings file, whitelist file, post log, and thread
database. ( settings.py , ips.txt , log.txt , ./threads/ )

Users must solve a captcha in order to publish a thread or comment.
Users who attempt to solve the captcha are logged in `ips.txt` by
default; a user who is unable to solve the captcha can have the key
provided by the administrator or have the test overriden if the user
provides their IP address.

The file `log.txt` contains a list in the format
`board thread replynum ipaddress`, which can be used to help block
spammers. It does not filter spam from remote boards; in the future,
a list for threads / comments to block from remote boards will be
available. An expansion of the admin system will include `spam.txt`
(terms to blacklist), `ban.txt` (IPs to blacklist), and possibly other
features.

Tags can be manually set by the administrator by modifying the
`./threads/site/thread/head.txt` file's second line with space seperated
keywords, and then executing `python3 tags.py` or `python3 init.py`. 

# Directory structure
```
in ./threads/ :

./site/######/head
	title
	tag1 tag2 tag3 ...
./site/######/sitename
	time<>name<>comment	
./site/######/list
	site time

./site/list
	optime lastreply localreplies allreplies title
./site/tags
        tag thread thread thread ...	

./list
	site optime lastreply localreplies allreplies title
./friends
	site url
./tags
	tag site-thread ...
```

# Help! My board is broken!
Move your threads directory somewhere safe and make a new one.

In the `./threads/` directory:

1. Make a new directory, `local/0/`
2. Create `local/0/head.txt`
3. Enter `Hello world`, newline, `none`
4. Create `local/0/local.txt`
5. Enter `0<>none<>none`
6. Create `local/0/list.txt`
7. Enter `local 0`
8. Enter `python3 refresh.py`

Removing files from ./archive/ which contain `boardname`
(e.g. `rm ./archive/*boardname*` ) may also be useful.